@page "/clientes"
@using App_bolo.Services;
@using App_bolo.Models;
@inject ClienteService ClienteService;
@rendermode InteractiveServer
@inject NavigationManager navegacao;

<h1 class="mb-4">Clientes</h1>

<div class="mb-3">
    <button class="btn btn-success" style="background-color: #b81469;" @onclick="AbrirModal">Novo Cliente</button>
</div>

@if (clientes is null)
{
    <div>Carregando...</div>
}
else
{
    <table class="table table-bordered table-striped">
        <thead class="table-light">
            <tr>
                <th>ID</th>
                <th>Nome</th>
                <th>Email</th>
                <th>Endereço</th>
                <th>Data de Nascimento</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var c in clientes)
            {
                <tr>
                    <td>@c.Id_cli</td>
                    <td>@c.Nome_cli</td>
                    <td>@c.Email_cli</td>
                    <td>@c.Endereco_Cli</td>
                    <td>@c.Data_nasc_cli.ToString("dd/MM/yyyy")</td>
                    <td>
                        <button class="btn btn-sm btn-primary me-1" @onclick="() => EditarCliente(c)">Editar</button>
                        <button class="btn btn-sm btn-danger" @onclick="() => SolicitarConfirmacaoExclusao(c.Id_cli, c.Nome_cli)">Excluir</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<!-- Modal Bootstrap -->
@if (mostrarModal)
{
    <div class="modal fade show d-block" tabindex="-1" style="display:block; background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@((modoEdicao ? "Editar" : "Novo") + " Cliente")</h5>
                    <button type="button" class="btn-close" @onclick="FecharModal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label>Nome</label>
                        <input class="form-control" @bind="clienteAtual.Nome_cli" />
                    </div>
                    <div class="mb-3">
                        <label>Email</label>
                        <input class="form-control" type="email" @bind="clienteAtual.Email_cli" />
                    </div>
                    <div class="mb-3">
                        <label>Endereço</label>
                        <input class="form-control" @bind="clienteAtual.Endereco_Cli" />
                    </div>
                    <div class="mb-3">
                        <label>Data de Nascimento</label>
                        <input class="form-control" type="date" @bind="clienteAtual.Data_nasc_cli" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="FecharModal">Cancelar</button>
                    <button class="btn btn-success" @onclick="SalvarCliente">Salvar</button>
                </div>
            </div>
        </div>
    </div>
}

@if (mostrarConfirmacao)
{
    <div class="modal fade show d-block" tabindex="-1" style="display:block; background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirmar Exclusão</h5>
                    <button type="button" class="btn-close" @onclick="CancelarExclusao"></button>
                </div>
                <div class="modal-body">
                    <p>Tem certeza que deseja excluir o cliente <strong>@nomeClienteParaExcluir</strong>?</p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="CancelarExclusao">Cancelar</button>
                    <button class="btn btn-danger" @onclick="ConfirmarExclusao">Sim, Excluir</button>
                </div>
            </div>
        </div>
    </div>
}


@code {
    private List<Clientes>? clientes;
    private Clientes clienteAtual = new();
    private bool mostrarModal = false;
    private bool modoEdicao = false;
    private bool mostrarConfirmacao = false;
    private int idClienteParaExcluir;
    private string nomeClienteParaExcluir = "";

    protected override async Task OnInitializedAsync()
    {
        await CarregarClientes();
    }

    private async Task CarregarClientes()
    {
        clientes = await ClienteService.GetClientesAsync();
    }

    private void AbrirModal()
    {
        clienteAtual = new Clientes();
        modoEdicao = false;
        mostrarModal = true;
        StateHasChanged(); // 🔄 força re-render
    }

    private void EditarCliente(Clientes cliente)
    {
        clienteAtual = new Clientes
        {
            Id_cli = cliente.Id_cli,
            Nome_cli = cliente.Nome_cli,
            Email_cli = cliente.Email_cli,
            Endereco_Cli = cliente.Endereco_Cli,
            Data_nasc_cli = cliente.Data_nasc_cli
        };
        modoEdicao = true;
        mostrarModal = true;
    }

    private async Task SalvarCliente()
    {
        if (modoEdicao)
        {
            await ClienteService.UpdateClienteAsync(clienteAtual);
        }
        else
        {
            await ClienteService.AddClienteAsync(clienteAtual);
        }

        mostrarModal = false;
        await CarregarClientes();
    }

    private void SolicitarConfirmacaoExclusao(int id, string nome)
    {
        idClienteParaExcluir = id;
        nomeClienteParaExcluir = nome;
        mostrarConfirmacao = true;
    }

    private void CancelarExclusao()
    {
        mostrarConfirmacao = false;
        idClienteParaExcluir = 0;
        nomeClienteParaExcluir = "";
    }

    private async Task ConfirmarExclusao()
    {
        await ClienteService.DeleteClienteAsync(idClienteParaExcluir);
        mostrarConfirmacao = false;
        await CarregarClientes();
    }

    private void FecharModal()
    {
        mostrarModal = false;
    }
}
